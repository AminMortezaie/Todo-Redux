{"ast":null,"code":"export default ((state = [], action) => {\n  switch (action.type) {\n    case 'add-todo':\n      return [...state, Object.assign({}, {\n        id: action.payload.id,\n        todo: action.payload.todo\n      })];\n\n    case 'remove-todo':\n      console.log(action);\n      return removeObject(state, action.id);\n\n    default:\n      return state;\n  }\n});\n\nconst removeObject = (array, id) => {\n  console.log(array);\n  let newState = [];\n  array.map(todo => {\n    if (todo.id !== id) {\n      newState.concat(todo);\n    } else if (todo.id === id) {\n      newState.concat({});\n    }\n  });\n  return newState;\n};","map":{"version":3,"sources":["F:\\Sobhe\\Todo-Redux\\src\\reducers\\TodoListReducer.js"],"names":["state","action","type","Object","assign","id","payload","todo","console","log","removeObject","array","newState","map","concat"],"mappings":"AAAA,gBAAe,CAACA,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,CACH,GAAGF,KADA,EAEHG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,OAAP,CAAeD,EAApB;AAAwBE,QAAAA,IAAI,EAAEN,MAAM,CAACK,OAAP,CAAeC;AAA7C,OAAlB,CAFG,CAAP;;AAIJ,SAAK,aAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,aAAOS,YAAY,CAACV,KAAD,EAAQC,MAAM,CAACI,EAAf,CAAnB;;AACJ;AACI,aAAOL,KAAP;AAVR;AAaH,CAdD;;AAiBA,MAAMU,YAAY,GAAG,CAACC,KAAD,EAAQN,EAAR,KAAe;AAChCG,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,MAAIC,QAAQ,GAAC,EAAb;AACAD,EAAAA,KAAK,CAACE,GAAN,CAAUN,IAAI,IAAI;AACV,QAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;AAChBO,MAAAA,QAAQ,CAACE,MAAT,CAAgBP,IAAhB;AACH,KAFD,MAGK,IAAGA,IAAI,CAACF,EAAL,KAAYA,EAAf,EAAkB;AACnBO,MAAAA,QAAQ,CAACE,MAAT,CAAgB,EAAhB;AACH;AACJ,GAPL;AASA,SAAOF,QAAP;AACH,CAbD","sourcesContent":["export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add-todo':\r\n            return [\r\n                ...state,\r\n                Object.assign({}, {id: action.payload.id, todo: action.payload.todo})\r\n            ];\r\n        case 'remove-todo':\r\n            console.log(action);\r\n            return removeObject(state, action.id);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nconst removeObject = (array, id) => {\r\n    console.log(array);\r\n    let newState=[];\r\n    array.map(todo => {\r\n            if (todo.id !== id) {\r\n                newState.concat(todo);\r\n            }\r\n            else if(todo.id === id){\r\n                newState.concat({});\r\n            }\r\n        }\r\n    );\r\n    return newState;\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}