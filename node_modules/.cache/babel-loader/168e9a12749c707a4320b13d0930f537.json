{"ast":null,"code":"var _jsxFileName = \"F:\\\\Sobhe\\\\Todo-Redux\\\\src\\\\components\\\\TodoList.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { Button, Input, Tab } from 'semantic-ui-react';\nimport '../css/todolist.css';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateInput = event => {\n      this.setState({\n        input: event.target.value\n      });\n      console.log(this.state.input);\n    };\n\n    this.handleAddTodo = () => {\n      this.props.addTodo(this.state.input);\n    };\n\n    this.state = {\n      input: ''\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    const panes = [{\n      menuItem: 'Add-Todo',\n      render: () => React.createElement(Tab.Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Input, {\n        autoFocus: \"autofocus\",\n        placeholder: \"Make Todo\",\n        onChange: this.updateInput,\n        value: this.state.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"blue\",\n        onClick: () => this.handleAddTodo(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"AddTodo\"))\n    }, {\n      menuItem: 'Todo-List',\n      render: () => this.props.todoList.map(todo => React.createElement(Tab.Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, todo.todo), React.createElement(Button, {\n        inverted: true,\n        color: \"green\",\n        onClick: () => {\n          this.props.completeList(todo);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Complete\"), React.createElement(Button, {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Delete\"))))\n    }, {\n      menuItem: 'Complete-List',\n      render: () => this.props.completeListArray.map(completeElement => React.createElement(Tab.Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, completeElement.todo))))\n    }];\n\n    const TabExampleLoading = () => React.createElement(Tab, {\n      panes: panes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n\n    return React.createElement(\"div\", {\n      className: \"mytodo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TabExampleLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.TodoList,\n    completeListArray: state.CompleteList\n  };\n};\n\nexport default connect(mapStateToProps, actions)(TodoList);","map":{"version":3,"sources":["F:\\Sobhe\\Todo-Redux\\src\\components\\TodoList.js"],"names":["React","connect","actions","Button","Input","Tab","TodoList","Component","constructor","props","updateInput","event","setState","input","target","value","console","log","state","handleAddTodo","addTodo","render","panes","menuItem","todoList","map","todo","completeList","completeListArray","completeElement","TabExampleLoading","mapStateToProps","CompleteList"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions'\r\nimport {Button, Input, Tab} from 'semantic-ui-react'\r\nimport '../css/todolist.css'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {input: ''}\r\n    }\r\n\r\n    updateInput = event => {\r\n        this.setState({input: event.target.value});\r\n        console.log(this.state.input)\r\n    };\r\n\r\n    handleAddTodo = () => {\r\n        this.props.addTodo(this.state.input);\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props);\r\n\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: 'Add-Todo', render: () =>\r\n                    <Tab.Pane>\r\n                        <Input autoFocus=\"autofocus\" placeholder='Make Todo' onChange={this.updateInput}\r\n                               value={this.state.input}/>\r\n                        <Button color='blue' onClick={() => this.handleAddTodo()}>\r\n                            AddTodo\r\n                        </Button>\r\n                    </Tab.Pane>\r\n            },\r\n            {\r\n                menuItem: 'Todo-List',\r\n                render: () =>\r\n                    this.props.todoList.map((todo) =>\r\n                        <Tab.Pane>\r\n                            <div>\r\n                                <p>{todo.todo}</p>\r\n                                <Button inverted color='green' onClick={() => {\r\n                                    this.props.completeList(todo);\r\n                                }}>\r\n                                    Complete\r\n                                </Button>\r\n                                <Button color='red'>Delete</Button>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                    )\r\n            },\r\n\r\n            {\r\n                menuItem: 'Complete-List', render: () =>\r\n                    this.props.completeListArray.map((completeElement) =>\r\n                        <Tab.Pane>\r\n                            <div>\r\n                                <p>{completeElement.todo}</p>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                    )\r\n            },\r\n        ];\r\n\r\n\r\n        const TabExampleLoading = () => <Tab panes={panes}/>;\r\n        return (\r\n            <div className=\"mytodo\"><TabExampleLoading/></div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.TodoList,\r\n        completeListArray: state.CompleteList\r\n    }\r\n};\r\nexport default connect(mapStateToProps, actions)(TodoList);\r\n"]},"metadata":{},"sourceType":"module"}