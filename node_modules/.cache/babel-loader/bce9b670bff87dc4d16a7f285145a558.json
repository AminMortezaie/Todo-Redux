{"ast":null,"code":"var _jsxFileName = \"F:\\\\Sobhe\\\\Todo-Redux\\\\src\\\\example.js\";\nimport React from 'react';\nimport { Button, Tab } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions\";\nconst panes = [{\n  menuItem: 'Tab 1',\n  render: this.props.todoList.map(todo => React.createElement(Tab.Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, todo.todo), React.createElement(Button, {\n    content: \"Primary\",\n    primary: true,\n    onClick: () => {\n      this.props.completeList(todo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Complete\"))))\n}, {\n  menuItem: 'Tab 2',\n  render: () => React.createElement(Tab.Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Tab 2 Content\")\n}, {\n  menuItem: 'Tab 3',\n  render: () => React.createElement(Tab.Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Tab 3 Content\")\n}];\n\nconst TabExampleLoading = () => React.createElement(Tab, {\n  panes: panes,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n});\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.TodoList,\n    completeListArray: state.CompleteList\n  };\n};\n\nexport default connect(mapStateToProps, actions)(TabExampleLoading);","map":{"version":3,"sources":["F:\\Sobhe\\Todo-Redux\\src\\example.js"],"names":["React","Button","Tab","connect","actions","panes","menuItem","render","props","todoList","map","todo","completeList","TabExampleLoading","mapStateToProps","state","TodoList","completeListArray","CompleteList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,QAAQ,EAAE,OADd;AAEIC,EAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAyBC,IAAD,IAC5B,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACA,IAAT,CAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,MAAjC;AAAkC,IAAA,OAAO,EAAE,MAAM;AAC7C,WAAKH,KAAL,CAAWI,YAAX,CAAwBD,IAAxB;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CADI;AAFZ,CADU,EAgBV;AAACL,EAAAA,QAAQ,EAAE,OAAX;AAAoBC,EAAAA,MAAM,EAAE,MAAM,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlC,CAhBU,EAiBV;AAACD,EAAAA,QAAQ,EAAE,OAAX;AAAoBC,EAAAA,MAAM,EAAE,MAAM,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlC,CAjBU,CAAd;;AAoBA,MAAMM,iBAAiB,GAAG,MAAM,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAER,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhC;;AAEA,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,QAAQ,EAAEM,KAAK,CAACC,QADb;AAEHC,IAAAA,iBAAiB,EAAEF,KAAK,CAACG;AAFtB,GAAP;AAIH,CALD;;AAMA,eAAef,OAAO,CAACW,eAAD,EAAkBV,OAAlB,CAAP,CAAkCS,iBAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport {Button, Tab} from 'semantic-ui-react'\r\nimport {connect} from \"react-redux\";\r\nimport * as actions from \"./actions\";\r\n\r\nconst panes = [\r\n    {\r\n        menuItem: 'Tab 1',\r\n        render: this.props.todoList.map((todo) =>\r\n            <Tab.Pane>\r\n                <div>\r\n\r\n                    <p>{todo.todo}</p>\r\n                    <Button content='Primary' primary onClick={() => {\r\n                        this.props.completeList(todo);\r\n                    }}>\r\n                        Complete\r\n                    </Button>\r\n                </div>\r\n            </Tab.Pane>)\r\n    },\r\n    {menuItem: 'Tab 2', render: () => <Tab.Pane>Tab 2 Content</Tab.Pane>},\r\n    {menuItem: 'Tab 3', render: () => <Tab.Pane>Tab 3 Content</Tab.Pane>},\r\n];\r\n\r\nconst TabExampleLoading = () => <Tab panes={panes}/>;\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.TodoList,\r\n        completeListArray: state.CompleteList\r\n    }\r\n};\r\nexport default connect(mapStateToProps, actions)(TabExampleLoading)"]},"metadata":{},"sourceType":"module"}